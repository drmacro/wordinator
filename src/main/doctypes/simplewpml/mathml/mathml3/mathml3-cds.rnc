#     This is the Mathematical Markup Language (MathML) 3.0, an XML
#     application for describing mathematical notation and capturing
#     both its structure and content.
#
#     Copyright 1998-2008 W3C (MIT, ERCIM, Keio)
# 
#     Use and distribution of this code are permitted under the terms
#     W3C Software Notice and License
#     http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231
#
#
#     Revision:   $Id: mathml3-cds.rnc,v 1.2 2008/11/15 22:00:48 dcarlis Exp $
#
#    Update to MathML3 and Relax NG: David Carlisle and Michael Kohlhase

default namespace m = "http://www.w3.org/1998/Math/MathML"

# some elements were containers in MathML2, so they get a separate treatment,
# that can be extended in mathml3-pragmatic.rnc

# we augment the content of an apply element
apply.content |= (cd.token.unary.class,ContExp)|
	                  (cd.token.binary.class,ContExp,ContExp)|
			  (cd.token.nary.class,ContExp+)|
			  cd.container.class

# of the bind element 
binder.class |= cd.token.binder.class

# now we allow all tokens (except the binding symbols) to appear on their own
ContExp |= cd.token.unary.class|cd.token.binary.class|cd.token.nary.class|cd.token.class

#now we allow the containers as well. 
ContExp |= cd.container.class

# we set the default content type for tokens
Token.type = Definition.attrib, MathML.Common.attrib

# also set up MathMLtype, which is used in the CDs 
#ednote(rnc:mathmltype) fudge it for now
MathMLtype = xsd:string

# simple arity checking for Tokens from the MathML3 CDs. 
# we set up the categories to be extended by the CD-generated grammars
cd.token.class =  notAllowed
cd.token.unary.class = notAllowed
cd.token.binary.class = notAllowed
cd.token.nary.class = notAllowed
cd.token.binder.class = notAllowed
cd.token.key.class = notAllowed
cd.token.error.class = notAllowed
cd.container.class = notAllowed	

# then we include the generated ones

include "algebra-logic.rnc"
include "basic-content-elements.rnc" 
include "calculus_veccalc.rnc"
include "constants.rnc" 
include "errors.rnc" 
include "linear_algebra.rnc" 
include "relations.rnc" 
include "sequences_series.rnc"
include "sets.rnc" 
include "specfun.rnc" 
include "statistics.rnc"

